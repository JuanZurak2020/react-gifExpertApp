{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","catego","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MA+BeA,EA7BY,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAM,OAAMP,GAAN,mBAAqBO,OAC1CN,EAAc,MAKlB,SACI,uBACQO,KAAK,OACLC,MAAUT,EACVU,SAjBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCJlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAWH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACjC,MAAO,CACHF,GAAIA,EACJC,MAAOA,EACPT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QATnB,kBAYZM,GAZY,4CAAH,sDCGPM,G,MAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IACtC,OACI,sBAAKa,UAAU,wCAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,SCJHO,EAAU,SAAC,GAAmB,IAAhBlB,EAAe,EAAfA,SAAe,ECAd,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNY,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAQ,SAIrB,CAAEnB,IAEEoB,EDdwBK,CAAczB,GAAtCmB,EAH+B,EAG/BA,QAAcP,EAHiB,EAGtBL,KAEhB,OACI,qCACA,oBAAIQ,UAAU,sCAAd,SAAsDf,IAErDmB,GAAW,mBAAGJ,UAAU,qCAAb,sBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOH,KAAK,SAAAiB,GAAG,OACX,wBAAC,EAAD,2BACKA,GADL,IAEAC,IAAOD,EAAIhB,eEYpBkB,EA5BM,WAAK,MAEc1C,mBAAS,CAAC,gBAFxB,mBAEf2C,EAFe,KAEH5C,EAFG,KAQtB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACAA,SAAaA,GACLA,YClBhC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cd8b7d00.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { PropTypes } from \"prop-types\";\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit = ( e )=>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( catego => [ inputValue, ...catego] );\r\n            setinputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                    type=\"text\"\r\n                    value = { inputValue }\r\n                    onChange = { handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\nexport const getGifs = async ( category )=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&api_key=STjg5DmTQkCk1Z7sz00pCteGGbhqLqAU&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( ({ id, title, images }) => {\r\n        return {\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url,\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nimport {} from \"animate.css\";\r\n\r\nexport const GifGridItem = (  {id, title, url}  ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category }) => {\r\n    \r\n\r\n    const {loading, data:images} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__bounceIn\">{ category }</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flipInY\">Cargando</p> }\r\n\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                        { ...img } \r\n                        key = {img.id}\r\n                        />\r\n                    ) )\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });    \r\n\r\n    useEffect( ()=>{\r\n        getGifs( category )\r\n            .then( imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading:false\r\n                })\r\n                \r\n            });\r\n    }, [ category ])\r\n\r\n    return state; // retorna objeto {data, loading}\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n    // const categories = ['One punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handleAdd = ( ) =>{\r\n    //     // setCategories( [...categories, 'Juanito anime'] );\r\n    //     setCategories( catego => [...catego, 'Juanito anime'] );\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                        category = { category }\r\n                        key = { category }\r\n                        />\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n} \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}